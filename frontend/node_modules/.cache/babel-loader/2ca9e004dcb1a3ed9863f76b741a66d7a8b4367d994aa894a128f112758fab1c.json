{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:9000';const api=axios.create({baseURL:API_BASE_URL,timeout:300000,// 5分タイムアウト\nheaders:{'Content-Type':'application/json'}});export const uploadPDF=async file=>{console.log('Uploading file:',file.name,'Type:',file.type,'Size:',file.size);const formData=new FormData();formData.append('file',file);try{const response=await api.post('/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});console.log('Upload response:',response.data);return response.data;}catch(error){var _error$response;console.error('Upload error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);throw error;}};export const searchDocuments=async query=>{console.log('Search request:',query);try{const response=await api.post('/search',query);console.log('Search response:',response.data);return response.data;}catch(error){var _error$response2;console.error('Search error:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);throw error;}};export const getDocumentCount=async()=>{const response=await api.get('/documents/count');return response.data;};export const clearDocuments=async()=>{const response=await api.delete('/documents');return response.data;};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","uploadPDF","file","console","log","name","type","size","formData","FormData","append","response","post","data","error","_error$response","message","searchDocuments","query","_error$response2","getDocumentCount","get","clearDocuments","delete"],"sources":["C:/PDFAI/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { SearchQuery, SearchResult, UploadResponse } from '../types';\n\nconst API_BASE_URL = 'http://localhost:9000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 300000, // 5分タイムアウト\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const uploadPDF = async (file: File): Promise<UploadResponse> => {\n  console.log('Uploading file:', file.name, 'Type:', file.type, 'Size:', file.size);\n  \n  const formData = new FormData();\n  formData.append('file', file);\n  \n  try {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    console.log('Upload response:', response.data);\n    return response.data;\n  } catch (error: any) {\n    console.error('Upload error:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\nexport const searchDocuments = async (query: SearchQuery): Promise<SearchResult[]> => {\n  console.log('Search request:', query);\n  \n  try {\n    const response = await api.post('/search', query);\n    console.log('Search response:', response.data);\n    return response.data;\n  } catch (error: any) {\n    console.error('Search error:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\nexport const getDocumentCount = async (): Promise<{ count: number }> => {\n  const response = await api.get('/documents/count');\n  return response.data;\n};\n\nexport const clearDocuments = async (): Promise<{ message: string }> => {\n  const response = await api.delete('/documents');\n  return response.data;\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAG,uBAAuB,CAE5C,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,MAAM,CAAE;AACjBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,IAAU,EAA8B,CACtEC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,IAAI,CAACG,IAAI,CAAE,OAAO,CAAEH,IAAI,CAACI,IAAI,CAAE,OAAO,CAAEJ,IAAI,CAACK,IAAI,CAAC,CAEjF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAER,IAAI,CAAC,CAE7B,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACgB,IAAI,CAAC,SAAS,CAAEJ,QAAQ,CAAE,CACnDR,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CAEFG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEO,QAAQ,CAACE,IAAI,CAAC,CAC9C,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAU,CAAE,KAAAC,eAAA,CACnBZ,OAAO,CAACW,KAAK,CAAC,eAAe,CAAE,EAAAC,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,iBAAdA,eAAA,CAAgBF,IAAI,GAAIC,KAAK,CAACE,OAAO,CAAC,CACrE,KAAM,CAAAF,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAG,eAAe,CAAG,KAAO,CAAAC,KAAkB,EAA8B,CACpFf,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEc,KAAK,CAAC,CAErC,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACgB,IAAI,CAAC,SAAS,CAAEM,KAAK,CAAC,CACjDf,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEO,QAAQ,CAACE,IAAI,CAAC,CAC9C,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAU,CAAE,KAAAK,gBAAA,CACnBhB,OAAO,CAACW,KAAK,CAAC,eAAe,CAAE,EAAAK,gBAAA,CAAAL,KAAK,CAACH,QAAQ,UAAAQ,gBAAA,iBAAdA,gBAAA,CAAgBN,IAAI,GAAIC,KAAK,CAACE,OAAO,CAAC,CACrE,KAAM,CAAAF,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,gBAAgB,CAAG,KAAAA,CAAA,GAAwC,CACtE,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACyB,GAAG,CAAC,kBAAkB,CAAC,CAClD,MAAO,CAAAV,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAS,cAAc,CAAG,KAAAA,CAAA,GAA0C,CACtE,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAAC2B,MAAM,CAAC,YAAY,CAAC,CAC/C,MAAO,CAAAZ,QAAQ,CAACE,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}